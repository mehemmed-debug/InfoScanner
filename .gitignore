# -*- coding: utf-8 -*-
# Coded by Mehemmed ☠️😈
import requests
import whois
import os
from flask import Flask, request
import socket
import dns.resolver

BANNER = '''
\033[1;31m
  __  __      _                                _
 |  \/  | ___| |_ __ _  __ _  ___  _ __   ___| |
 | |\/| |/ _ \ __/ _` |/ _` |/ _ \| '_ \ / _ \ |
 | |  | |  __/ || (_| | (_| | (_) | | | |  __/_|
 |_|  |_|\___|\__\__,_|\__, |\___/|_| |_|\___(_)
                       |___/   V1.0 By Mehemmed
\033[0m
'''
print(BANNER)

def phone_lookup():
    num = input("Nömrəni daxil et (+994 ilə): ")
    api = "https://api.apilayer.com/number_verification/validate?number=" + num
    headers = {"apikey": "BURAYA_API_KEY"}  # Buraya öz API açarını yaz
    try:
        res = requests.get(api, headers=headers)
        res.raise_for_status()
        print(res.json())
    except requests.exceptions.RequestException as e:
        print(f"Xəta baş verdi: {e}")

def ip_lookup():
    ip = input("IP-ni daxil et: ")
    url = f"http://ip-api.com/json/{ip}"
    try:
        data = requests.get(url).json()
        if data['status'] == 'fail':
            print("IP tapılmadı.")
        else:
            print(f"Ölkə: {data['country']}\nŞəhər: {data['city']}\nISP: {data['isp']}\nKoordinatlar: {data['lat']}, {data['lon']}")
    except requests.exceptions.RequestException as e:
        print(f"Xəta baş verdi: {e}")

def domain_lookup():
    domain = input("Domain daxil et: ")
    try:
        w = whois.whois(domain)
        print(w)
    except Exception as e:
        print(f"Xəta baş verdi: {e}")

def ip_logger():
    print("\nFlask IP logger kodunu 'iplogger.py' adında ayrıca yarat:\n")
    print('''
from flask import Flask, request
app = Flask(__name__)

@app.route("/")
def index():
    ip = request.remote_addr
    with open("ips.txt", "a") as f:
        f.write(f"{ip}\\n")
    return "IP yazıldı"

app.run(host="0.0.0.0", port=8080)
    ''')

def port_scanner():
    ip = input("IP-ni daxil et: ")
    start_port = int(input("Başlanğıc portunu daxil et: "))
    end_port = int(input("Son portu daxil et: "))
    print(f"Port skaneri {ip} üçün {start_port} - {end_port} portları arasında işləyir...")
    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((ip, port))
        if result == 0:
            print(f"Port {port}: Açıq")
        sock.close()

def dns_lookup():
    domain = input("Domain daxil et: ")
    try:
        answers = dns.resolver.resolve(domain, 'A')
        for rdata in answers:
            print(rdata.to_text())
    except Exception as e:
        print(f"Xəta baş verdi: {e}")

while True:
    print('''
1. Nömrə Yoxla
2. IP Yoxla
3. Domain Yoxla
4. IP Logger Flask
5. Port Skaneri
6. DNS Yoxla
7. Çıx
    ''')
    secim = input("Seç: ")

    if secim == "1":
        phone_lookup()
    elif secim == "2":
        ip_lookup()
    elif secim == "3":
        domain_lookup()
    elif secim == "4":
        ip_logger()
    elif secim == "5":
        port_scanner()
    elif secim == "6":
        dns_lookup()
    elif secim == "7":
        print()
        break
    else:
        print("Yanlış seçim. Yenidən cəhd edin.")